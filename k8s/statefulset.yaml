apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-db
  labels:
    app: my-db
spec:
  serviceName: "my-db"
  replicas: 1
  selector: # Selector to identify which pods to manage
    matchLabels:
      app: my-db
  template:
    metadata:
      labels:
        app: my-db
    spec:
      containers:
        - name: my-db
          image: postgres:alpine  
          ports:
            - containerPort: 5432
          env:
          - name: POSTGRES_DB
            value: myapp_db
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: my-cloud-app-secret
                key: DB_USER  
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-cloud-app-secret
                key: DB_PASS
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "120Mi"
              cpu: "500m"
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "myapp_user"] # fix
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "myapp_user"] # fix
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          volumeMounts:
          - name: postgres-storage
            mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi

